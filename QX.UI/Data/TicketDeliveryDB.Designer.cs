//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace QX.UI.Data {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TicketDeliveryDB")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TicketDeliveryDB : global::System.Data.DataSet {
        
        private PCD_NRecordDataTable tablePCD_NRecord;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TicketDeliveryDB() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TicketDeliveryDB(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["PCD_NRecord"] != null)) {
                    base.Tables.Add(new PCD_NRecordDataTable(ds.Tables["PCD_NRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PCD_NRecordDataTable PCD_NRecord {
            get {
                return this.tablePCD_NRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            TicketDeliveryDB cln = ((TicketDeliveryDB)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["PCD_NRecord"] != null)) {
                    base.Tables.Add(new PCD_NRecordDataTable(ds.Tables["PCD_NRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablePCD_NRecord = ((PCD_NRecordDataTable)(base.Tables["PCD_NRecord"]));
            if ((initTable == true)) {
                if ((this.tablePCD_NRecord != null)) {
                    this.tablePCD_NRecord.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "TicketDeliveryDB";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TicketDeliveryDB.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablePCD_NRecord = new PCD_NRecordDataTable();
            base.Tables.Add(this.tablePCD_NRecord);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePCD_NRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TicketDeliveryDB ds = new TicketDeliveryDB();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void PCD_NRecordRowChangeEventHandler(object sender, PCD_NRecordRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PCD_NRecordDataTable : global::System.Data.TypedTableBase<PCD_NRecordRow> {
            
            private global::System.Data.DataColumn columnPCDN_ID;
            
            private global::System.Data.DataColumn columnPCDN_Code;
            
            private global::System.Data.DataColumn columnPCDN_CCode;
            
            private global::System.Data.DataColumn columnPCDN_PRCode;
            
            private global::System.Data.DataColumn columnPCDN_PCode;
            
            private global::System.Data.DataColumn columnPCDN_PDCode;
            
            private global::System.Data.DataColumn columnPCDN_PSCode;
            
            private global::System.Data.DataColumn columnPCDN_Part;
            
            private global::System.Data.DataColumn columnPCDN_Slump;
            
            private global::System.Data.DataColumn columnPCDN_Spec1;
            
            private global::System.Data.DataColumn columnPCDN_Spec2;
            
            private global::System.Data.DataColumn columnPCDN_TType;
            
            private global::System.Data.DataColumn columnPCDN_TEqu;
            
            private global::System.Data.DataColumn columnPCDN_SOwner;
            
            private global::System.Data.DataColumn columnPCDN_SDate;
            
            private global::System.Data.DataColumn columnPCDN_TBSta;
            
            private global::System.Data.DataColumn columnPCDN_TBLine;
            
            private global::System.Data.DataColumn columnPCDN_OOwner;
            
            private global::System.Data.DataColumn columnPCDN_ODate;
            
            private global::System.Data.DataColumn columnPCDN_PPLimit;
            
            private global::System.Data.DataColumn columnPCDN_DIType;
            
            private global::System.Data.DataColumn columnPCDN_DINum;
            
            private global::System.Data.DataColumn columnPCDN_PNum;
            
            private global::System.Data.DataColumn columnPCDN_PCNum;
            
            private global::System.Data.DataColumn columnPCDN_PTOrd;
            
            private global::System.Data.DataColumn columnPCDN_PCDrv;
            
            private global::System.Data.DataColumn columnPCDN_Comp;
            
            private global::System.Data.DataColumn columnPCDN_PCCode;
            
            private global::System.Data.DataColumn columnPCDN_PCNo;
            
            private global::System.Data.DataColumn columnPCDN_DDate;
            
            private global::System.Data.DataColumn columnPCDN_RDate;
            
            private global::System.Data.DataColumn columnPCDN_JBegin;
            
            private global::System.Data.DataColumn columnPCDN_JEnd;
            
            private global::System.Data.DataColumn columnPCDN_LDate;
            
            private global::System.Data.DataColumn columnPCDN_BDate;
            
            private global::System.Data.DataColumn columnPCDN_PPNum;
            
            private global::System.Data.DataColumn columnPCDN_TDNum;
            
            private global::System.Data.DataColumn columnPCDN_TTNum;
            
            private global::System.Data.DataColumn columnPCDN_RTNum;
            
            private global::System.Data.DataColumn columnPCDN_CTNum;
            
            private global::System.Data.DataColumn columnPCDN_RRNum;
            
            private global::System.Data.DataColumn columnPCDN_MoreNum;
            
            private global::System.Data.DataColumn columnPCDN_PRNum;
            
            private global::System.Data.DataColumn columnPCDN_BStatus;
            
            private global::System.Data.DataColumn columnPCDN_TRNum;
            
            private global::System.Data.DataColumn columnPCDN_TBNum;
            
            private global::System.Data.DataColumn columnPCDN_TBBak;
            
            private global::System.Data.DataColumn columnPCDN_Stat;
            
            private global::System.Data.DataColumn columnPCDN_iType;
            
            private global::System.Data.DataColumn columnStat;
            
            private global::System.Data.DataColumn columnCreateDate;
            
            private global::System.Data.DataColumn columnUpdateDate;
            
            private global::System.Data.DataColumn columnDeleteDate;
            
            private global::System.Data.DataColumn columnPCDN_SourceCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PCD_NRecordDataTable() {
                this.TableName = "PCD_NRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PCD_NRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PCD_NRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_IDColumn {
                get {
                    return this.columnPCDN_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_CodeColumn {
                get {
                    return this.columnPCDN_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_CCodeColumn {
                get {
                    return this.columnPCDN_CCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PRCodeColumn {
                get {
                    return this.columnPCDN_PRCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PCodeColumn {
                get {
                    return this.columnPCDN_PCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PDCodeColumn {
                get {
                    return this.columnPCDN_PDCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PSCodeColumn {
                get {
                    return this.columnPCDN_PSCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PartColumn {
                get {
                    return this.columnPCDN_Part;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_SlumpColumn {
                get {
                    return this.columnPCDN_Slump;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_Spec1Column {
                get {
                    return this.columnPCDN_Spec1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_Spec2Column {
                get {
                    return this.columnPCDN_Spec2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TTypeColumn {
                get {
                    return this.columnPCDN_TType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TEquColumn {
                get {
                    return this.columnPCDN_TEqu;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_SOwnerColumn {
                get {
                    return this.columnPCDN_SOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_SDateColumn {
                get {
                    return this.columnPCDN_SDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TBStaColumn {
                get {
                    return this.columnPCDN_TBSta;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TBLineColumn {
                get {
                    return this.columnPCDN_TBLine;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_OOwnerColumn {
                get {
                    return this.columnPCDN_OOwner;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_ODateColumn {
                get {
                    return this.columnPCDN_ODate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PPLimitColumn {
                get {
                    return this.columnPCDN_PPLimit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_DITypeColumn {
                get {
                    return this.columnPCDN_DIType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_DINumColumn {
                get {
                    return this.columnPCDN_DINum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PNumColumn {
                get {
                    return this.columnPCDN_PNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PCNumColumn {
                get {
                    return this.columnPCDN_PCNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PTOrdColumn {
                get {
                    return this.columnPCDN_PTOrd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PCDrvColumn {
                get {
                    return this.columnPCDN_PCDrv;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_CompColumn {
                get {
                    return this.columnPCDN_Comp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PCCodeColumn {
                get {
                    return this.columnPCDN_PCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PCNoColumn {
                get {
                    return this.columnPCDN_PCNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_DDateColumn {
                get {
                    return this.columnPCDN_DDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_RDateColumn {
                get {
                    return this.columnPCDN_RDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_JBeginColumn {
                get {
                    return this.columnPCDN_JBegin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_JEndColumn {
                get {
                    return this.columnPCDN_JEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_LDateColumn {
                get {
                    return this.columnPCDN_LDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_BDateColumn {
                get {
                    return this.columnPCDN_BDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PPNumColumn {
                get {
                    return this.columnPCDN_PPNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TDNumColumn {
                get {
                    return this.columnPCDN_TDNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TTNumColumn {
                get {
                    return this.columnPCDN_TTNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_RTNumColumn {
                get {
                    return this.columnPCDN_RTNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_CTNumColumn {
                get {
                    return this.columnPCDN_CTNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_RRNumColumn {
                get {
                    return this.columnPCDN_RRNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_MoreNumColumn {
                get {
                    return this.columnPCDN_MoreNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_PRNumColumn {
                get {
                    return this.columnPCDN_PRNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_BStatusColumn {
                get {
                    return this.columnPCDN_BStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TRNumColumn {
                get {
                    return this.columnPCDN_TRNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TBNumColumn {
                get {
                    return this.columnPCDN_TBNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_TBBakColumn {
                get {
                    return this.columnPCDN_TBBak;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_StatColumn {
                get {
                    return this.columnPCDN_Stat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_iTypeColumn {
                get {
                    return this.columnPCDN_iType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatColumn {
                get {
                    return this.columnStat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CreateDateColumn {
                get {
                    return this.columnCreateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn UpdateDateColumn {
                get {
                    return this.columnUpdateDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DeleteDateColumn {
                get {
                    return this.columnDeleteDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PCDN_SourceCodeColumn {
                get {
                    return this.columnPCDN_SourceCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PCD_NRecordRow this[int index] {
                get {
                    return ((PCD_NRecordRow)(this.Rows[index]));
                }
            }
            
            public event PCD_NRecordRowChangeEventHandler PCD_NRecordRowChanging;
            
            public event PCD_NRecordRowChangeEventHandler PCD_NRecordRowChanged;
            
            public event PCD_NRecordRowChangeEventHandler PCD_NRecordRowDeleting;
            
            public event PCD_NRecordRowChangeEventHandler PCD_NRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPCD_NRecordRow(PCD_NRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PCD_NRecordRow AddPCD_NRecordRow(
                        string PCDN_Code, 
                        string PCDN_CCode, 
                        string PCDN_PRCode, 
                        string PCDN_PCode, 
                        string PCDN_PDCode, 
                        string PCDN_PSCode, 
                        string PCDN_Part, 
                        string PCDN_Slump, 
                        string PCDN_Spec1, 
                        string PCDN_Spec2, 
                        string PCDN_TType, 
                        string PCDN_TEqu, 
                        string PCDN_SOwner, 
                        System.DateTime PCDN_SDate, 
                        string PCDN_TBSta, 
                        string PCDN_TBLine, 
                        string PCDN_OOwner, 
                        System.DateTime PCDN_ODate, 
                        decimal PCDN_PPLimit, 
                        string PCDN_DIType, 
                        decimal PCDN_DINum, 
                        decimal PCDN_PNum, 
                        decimal PCDN_PCNum, 
                        int PCDN_PTOrd, 
                        string PCDN_PCDrv, 
                        string PCDN_Comp, 
                        string PCDN_PCCode, 
                        string PCDN_PCNo, 
                        System.DateTime PCDN_DDate, 
                        System.DateTime PCDN_RDate, 
                        System.DateTime PCDN_JBegin, 
                        System.DateTime PCDN_JEnd, 
                        System.DateTime PCDN_LDate, 
                        System.DateTime PCDN_BDate, 
                        decimal PCDN_PPNum, 
                        decimal PCDN_TDNum, 
                        int PCDN_TTNum, 
                        decimal PCDN_RTNum, 
                        decimal PCDN_CTNum, 
                        decimal PCDN_RRNum, 
                        decimal PCDN_MoreNum, 
                        decimal PCDN_PRNum, 
                        string PCDN_BStatus, 
                        decimal PCDN_TRNum, 
                        decimal PCDN_TBNum, 
                        string PCDN_TBBak, 
                        string PCDN_Stat, 
                        string PCDN_iType, 
                        int Stat, 
                        System.DateTime CreateDate, 
                        System.DateTime UpdateDate, 
                        System.DateTime DeleteDate, 
                        string PCDN_SourceCode) {
                PCD_NRecordRow rowPCD_NRecordRow = ((PCD_NRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PCDN_Code,
                        PCDN_CCode,
                        PCDN_PRCode,
                        PCDN_PCode,
                        PCDN_PDCode,
                        PCDN_PSCode,
                        PCDN_Part,
                        PCDN_Slump,
                        PCDN_Spec1,
                        PCDN_Spec2,
                        PCDN_TType,
                        PCDN_TEqu,
                        PCDN_SOwner,
                        PCDN_SDate,
                        PCDN_TBSta,
                        PCDN_TBLine,
                        PCDN_OOwner,
                        PCDN_ODate,
                        PCDN_PPLimit,
                        PCDN_DIType,
                        PCDN_DINum,
                        PCDN_PNum,
                        PCDN_PCNum,
                        PCDN_PTOrd,
                        PCDN_PCDrv,
                        PCDN_Comp,
                        PCDN_PCCode,
                        PCDN_PCNo,
                        PCDN_DDate,
                        PCDN_RDate,
                        PCDN_JBegin,
                        PCDN_JEnd,
                        PCDN_LDate,
                        PCDN_BDate,
                        PCDN_PPNum,
                        PCDN_TDNum,
                        PCDN_TTNum,
                        PCDN_RTNum,
                        PCDN_CTNum,
                        PCDN_RRNum,
                        PCDN_MoreNum,
                        PCDN_PRNum,
                        PCDN_BStatus,
                        PCDN_TRNum,
                        PCDN_TBNum,
                        PCDN_TBBak,
                        PCDN_Stat,
                        PCDN_iType,
                        Stat,
                        CreateDate,
                        UpdateDate,
                        DeleteDate,
                        PCDN_SourceCode};
                rowPCD_NRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPCD_NRecordRow);
                return rowPCD_NRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PCD_NRecordRow FindByPCDN_ID(decimal PCDN_ID) {
                return ((PCD_NRecordRow)(this.Rows.Find(new object[] {
                            PCDN_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PCD_NRecordDataTable cln = ((PCD_NRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PCD_NRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnPCDN_ID = base.Columns["PCDN_ID"];
                this.columnPCDN_Code = base.Columns["PCDN_Code"];
                this.columnPCDN_CCode = base.Columns["PCDN_CCode"];
                this.columnPCDN_PRCode = base.Columns["PCDN_PRCode"];
                this.columnPCDN_PCode = base.Columns["PCDN_PCode"];
                this.columnPCDN_PDCode = base.Columns["PCDN_PDCode"];
                this.columnPCDN_PSCode = base.Columns["PCDN_PSCode"];
                this.columnPCDN_Part = base.Columns["PCDN_Part"];
                this.columnPCDN_Slump = base.Columns["PCDN_Slump"];
                this.columnPCDN_Spec1 = base.Columns["PCDN_Spec1"];
                this.columnPCDN_Spec2 = base.Columns["PCDN_Spec2"];
                this.columnPCDN_TType = base.Columns["PCDN_TType"];
                this.columnPCDN_TEqu = base.Columns["PCDN_TEqu"];
                this.columnPCDN_SOwner = base.Columns["PCDN_SOwner"];
                this.columnPCDN_SDate = base.Columns["PCDN_SDate"];
                this.columnPCDN_TBSta = base.Columns["PCDN_TBSta"];
                this.columnPCDN_TBLine = base.Columns["PCDN_TBLine"];
                this.columnPCDN_OOwner = base.Columns["PCDN_OOwner"];
                this.columnPCDN_ODate = base.Columns["PCDN_ODate"];
                this.columnPCDN_PPLimit = base.Columns["PCDN_PPLimit"];
                this.columnPCDN_DIType = base.Columns["PCDN_DIType"];
                this.columnPCDN_DINum = base.Columns["PCDN_DINum"];
                this.columnPCDN_PNum = base.Columns["PCDN_PNum"];
                this.columnPCDN_PCNum = base.Columns["PCDN_PCNum"];
                this.columnPCDN_PTOrd = base.Columns["PCDN_PTOrd"];
                this.columnPCDN_PCDrv = base.Columns["PCDN_PCDrv"];
                this.columnPCDN_Comp = base.Columns["PCDN_Comp"];
                this.columnPCDN_PCCode = base.Columns["PCDN_PCCode"];
                this.columnPCDN_PCNo = base.Columns["PCDN_PCNo"];
                this.columnPCDN_DDate = base.Columns["PCDN_DDate"];
                this.columnPCDN_RDate = base.Columns["PCDN_RDate"];
                this.columnPCDN_JBegin = base.Columns["PCDN_JBegin"];
                this.columnPCDN_JEnd = base.Columns["PCDN_JEnd"];
                this.columnPCDN_LDate = base.Columns["PCDN_LDate"];
                this.columnPCDN_BDate = base.Columns["PCDN_BDate"];
                this.columnPCDN_PPNum = base.Columns["PCDN_PPNum"];
                this.columnPCDN_TDNum = base.Columns["PCDN_TDNum"];
                this.columnPCDN_TTNum = base.Columns["PCDN_TTNum"];
                this.columnPCDN_RTNum = base.Columns["PCDN_RTNum"];
                this.columnPCDN_CTNum = base.Columns["PCDN_CTNum"];
                this.columnPCDN_RRNum = base.Columns["PCDN_RRNum"];
                this.columnPCDN_MoreNum = base.Columns["PCDN_MoreNum"];
                this.columnPCDN_PRNum = base.Columns["PCDN_PRNum"];
                this.columnPCDN_BStatus = base.Columns["PCDN_BStatus"];
                this.columnPCDN_TRNum = base.Columns["PCDN_TRNum"];
                this.columnPCDN_TBNum = base.Columns["PCDN_TBNum"];
                this.columnPCDN_TBBak = base.Columns["PCDN_TBBak"];
                this.columnPCDN_Stat = base.Columns["PCDN_Stat"];
                this.columnPCDN_iType = base.Columns["PCDN_iType"];
                this.columnStat = base.Columns["Stat"];
                this.columnCreateDate = base.Columns["CreateDate"];
                this.columnUpdateDate = base.Columns["UpdateDate"];
                this.columnDeleteDate = base.Columns["DeleteDate"];
                this.columnPCDN_SourceCode = base.Columns["PCDN_SourceCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnPCDN_ID = new global::System.Data.DataColumn("PCDN_ID", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_ID);
                this.columnPCDN_Code = new global::System.Data.DataColumn("PCDN_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_Code);
                this.columnPCDN_CCode = new global::System.Data.DataColumn("PCDN_CCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_CCode);
                this.columnPCDN_PRCode = new global::System.Data.DataColumn("PCDN_PRCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PRCode);
                this.columnPCDN_PCode = new global::System.Data.DataColumn("PCDN_PCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PCode);
                this.columnPCDN_PDCode = new global::System.Data.DataColumn("PCDN_PDCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PDCode);
                this.columnPCDN_PSCode = new global::System.Data.DataColumn("PCDN_PSCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PSCode);
                this.columnPCDN_Part = new global::System.Data.DataColumn("PCDN_Part", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_Part);
                this.columnPCDN_Slump = new global::System.Data.DataColumn("PCDN_Slump", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_Slump);
                this.columnPCDN_Spec1 = new global::System.Data.DataColumn("PCDN_Spec1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_Spec1);
                this.columnPCDN_Spec2 = new global::System.Data.DataColumn("PCDN_Spec2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_Spec2);
                this.columnPCDN_TType = new global::System.Data.DataColumn("PCDN_TType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TType);
                this.columnPCDN_TEqu = new global::System.Data.DataColumn("PCDN_TEqu", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TEqu);
                this.columnPCDN_SOwner = new global::System.Data.DataColumn("PCDN_SOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_SOwner);
                this.columnPCDN_SDate = new global::System.Data.DataColumn("PCDN_SDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_SDate);
                this.columnPCDN_TBSta = new global::System.Data.DataColumn("PCDN_TBSta", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TBSta);
                this.columnPCDN_TBLine = new global::System.Data.DataColumn("PCDN_TBLine", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TBLine);
                this.columnPCDN_OOwner = new global::System.Data.DataColumn("PCDN_OOwner", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_OOwner);
                this.columnPCDN_ODate = new global::System.Data.DataColumn("PCDN_ODate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_ODate);
                this.columnPCDN_PPLimit = new global::System.Data.DataColumn("PCDN_PPLimit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PPLimit);
                this.columnPCDN_DIType = new global::System.Data.DataColumn("PCDN_DIType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_DIType);
                this.columnPCDN_DINum = new global::System.Data.DataColumn("PCDN_DINum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_DINum);
                this.columnPCDN_PNum = new global::System.Data.DataColumn("PCDN_PNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PNum);
                this.columnPCDN_PCNum = new global::System.Data.DataColumn("PCDN_PCNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PCNum);
                this.columnPCDN_PTOrd = new global::System.Data.DataColumn("PCDN_PTOrd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PTOrd);
                this.columnPCDN_PCDrv = new global::System.Data.DataColumn("PCDN_PCDrv", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PCDrv);
                this.columnPCDN_Comp = new global::System.Data.DataColumn("PCDN_Comp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_Comp);
                this.columnPCDN_PCCode = new global::System.Data.DataColumn("PCDN_PCCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PCCode);
                this.columnPCDN_PCNo = new global::System.Data.DataColumn("PCDN_PCNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PCNo);
                this.columnPCDN_DDate = new global::System.Data.DataColumn("PCDN_DDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_DDate);
                this.columnPCDN_RDate = new global::System.Data.DataColumn("PCDN_RDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_RDate);
                this.columnPCDN_JBegin = new global::System.Data.DataColumn("PCDN_JBegin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_JBegin);
                this.columnPCDN_JEnd = new global::System.Data.DataColumn("PCDN_JEnd", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_JEnd);
                this.columnPCDN_LDate = new global::System.Data.DataColumn("PCDN_LDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_LDate);
                this.columnPCDN_BDate = new global::System.Data.DataColumn("PCDN_BDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_BDate);
                this.columnPCDN_PPNum = new global::System.Data.DataColumn("PCDN_PPNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PPNum);
                this.columnPCDN_TDNum = new global::System.Data.DataColumn("PCDN_TDNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TDNum);
                this.columnPCDN_TTNum = new global::System.Data.DataColumn("PCDN_TTNum", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TTNum);
                this.columnPCDN_RTNum = new global::System.Data.DataColumn("PCDN_RTNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_RTNum);
                this.columnPCDN_CTNum = new global::System.Data.DataColumn("PCDN_CTNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_CTNum);
                this.columnPCDN_RRNum = new global::System.Data.DataColumn("PCDN_RRNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_RRNum);
                this.columnPCDN_MoreNum = new global::System.Data.DataColumn("PCDN_MoreNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_MoreNum);
                this.columnPCDN_PRNum = new global::System.Data.DataColumn("PCDN_PRNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_PRNum);
                this.columnPCDN_BStatus = new global::System.Data.DataColumn("PCDN_BStatus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_BStatus);
                this.columnPCDN_TRNum = new global::System.Data.DataColumn("PCDN_TRNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TRNum);
                this.columnPCDN_TBNum = new global::System.Data.DataColumn("PCDN_TBNum", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TBNum);
                this.columnPCDN_TBBak = new global::System.Data.DataColumn("PCDN_TBBak", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_TBBak);
                this.columnPCDN_Stat = new global::System.Data.DataColumn("PCDN_Stat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_Stat);
                this.columnPCDN_iType = new global::System.Data.DataColumn("PCDN_iType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_iType);
                this.columnStat = new global::System.Data.DataColumn("Stat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStat);
                this.columnCreateDate = new global::System.Data.DataColumn("CreateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateDate);
                this.columnUpdateDate = new global::System.Data.DataColumn("UpdateDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateDate);
                this.columnDeleteDate = new global::System.Data.DataColumn("DeleteDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleteDate);
                this.columnPCDN_SourceCode = new global::System.Data.DataColumn("PCDN_SourceCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPCDN_SourceCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPCDN_ID}, true));
                this.columnPCDN_ID.AutoIncrement = true;
                this.columnPCDN_ID.AutoIncrementSeed = -1;
                this.columnPCDN_ID.AutoIncrementStep = -1;
                this.columnPCDN_ID.AllowDBNull = false;
                this.columnPCDN_ID.ReadOnly = true;
                this.columnPCDN_ID.Unique = true;
                this.columnPCDN_Code.MaxLength = 20;
                this.columnPCDN_CCode.MaxLength = 20;
                this.columnPCDN_PRCode.MaxLength = 20;
                this.columnPCDN_PCode.MaxLength = 20;
                this.columnPCDN_PDCode.MaxLength = 20;
                this.columnPCDN_PSCode.MaxLength = 20;
                this.columnPCDN_Part.MaxLength = 200;
                this.columnPCDN_Slump.MaxLength = 20;
                this.columnPCDN_Spec1.MaxLength = 50;
                this.columnPCDN_Spec2.MaxLength = 50;
                this.columnPCDN_TType.MaxLength = 20;
                this.columnPCDN_TEqu.MaxLength = 20;
                this.columnPCDN_SOwner.MaxLength = 20;
                this.columnPCDN_TBSta.MaxLength = 20;
                this.columnPCDN_TBLine.MaxLength = 20;
                this.columnPCDN_OOwner.MaxLength = 20;
                this.columnPCDN_DIType.MaxLength = 20;
                this.columnPCDN_PCDrv.MaxLength = 20;
                this.columnPCDN_Comp.MaxLength = 20;
                this.columnPCDN_PCCode.MaxLength = 20;
                this.columnPCDN_PCNo.MaxLength = 20;
                this.columnPCDN_BStatus.MaxLength = 20;
                this.columnPCDN_TBBak.MaxLength = 500;
                this.columnPCDN_Stat.MaxLength = 20;
                this.columnPCDN_iType.MaxLength = 20;
                this.columnPCDN_SourceCode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PCD_NRecordRow NewPCD_NRecordRow() {
                return ((PCD_NRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PCD_NRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PCD_NRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PCD_NRecordRowChanged != null)) {
                    this.PCD_NRecordRowChanged(this, new PCD_NRecordRowChangeEvent(((PCD_NRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PCD_NRecordRowChanging != null)) {
                    this.PCD_NRecordRowChanging(this, new PCD_NRecordRowChangeEvent(((PCD_NRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PCD_NRecordRowDeleted != null)) {
                    this.PCD_NRecordRowDeleted(this, new PCD_NRecordRowChangeEvent(((PCD_NRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PCD_NRecordRowDeleting != null)) {
                    this.PCD_NRecordRowDeleting(this, new PCD_NRecordRowChangeEvent(((PCD_NRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePCD_NRecordRow(PCD_NRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TicketDeliveryDB ds = new TicketDeliveryDB();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PCD_NRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PCD_NRecordRow : global::System.Data.DataRow {
            
            private PCD_NRecordDataTable tablePCD_NRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PCD_NRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePCD_NRecord = ((PCD_NRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_ID {
                get {
                    return ((decimal)(this[this.tablePCD_NRecord.PCDN_IDColumn]));
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_Code {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_Code”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_CCode {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_CCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_CCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_CCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_PRCode {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PRCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PRCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PRCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_PCode {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_PDCode {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PDCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PDCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PDCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_PSCode {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PSCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PSCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PSCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_Part {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_Part”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_Slump {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_SlumpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_Slump”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_SlumpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_Spec1 {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_Spec1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_Spec1”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_Spec1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_Spec2 {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_Spec2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_Spec2”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_Spec2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_TType {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_TTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_TEqu {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_TEquColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TEqu”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TEquColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_SOwner {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_SOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_SOwner”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_SOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_SDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_SDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_SDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_SDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_TBSta {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_TBStaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TBSta”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TBStaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_TBLine {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_TBLineColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TBLine”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TBLineColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_OOwner {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_OOwnerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_OOwner”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_OOwnerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_ODate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_ODateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_ODate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_ODateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_PPLimit {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_PPLimitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PPLimit”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PPLimitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_DIType {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_DITypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_DIType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_DITypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_DINum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_DINumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_DINum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_DINumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_PNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_PNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_PCNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_PCNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PCNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PCNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PCDN_PTOrd {
                get {
                    try {
                        return ((int)(this[this.tablePCD_NRecord.PCDN_PTOrdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PTOrd”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PTOrdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_PCDrv {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PCDrvColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PCDrv”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PCDrvColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_Comp {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_CompColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_Comp”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_CompColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_PCCode {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PCCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PCCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PCCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_PCNo {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_PCNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PCNo”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PCNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_DDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_DDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_DDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_DDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_RDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_RDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_RDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_RDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_JBegin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_JBeginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_JBegin”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_JBeginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_JEnd {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_JEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_JEnd”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_JEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_LDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_LDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_LDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_LDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime PCDN_BDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.PCDN_BDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_BDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_BDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_PPNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_PPNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PPNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PPNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_TDNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_TDNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TDNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TDNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PCDN_TTNum {
                get {
                    try {
                        return ((int)(this[this.tablePCD_NRecord.PCDN_TTNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TTNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TTNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_RTNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_RTNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_RTNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_RTNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_CTNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_CTNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_CTNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_CTNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_RRNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_RRNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_RRNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_RRNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_MoreNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_MoreNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_MoreNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_MoreNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_PRNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_PRNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_PRNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_PRNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_BStatus {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_BStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_BStatus”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_BStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_TRNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_TRNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TRNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TRNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PCDN_TBNum {
                get {
                    try {
                        return ((decimal)(this[this.tablePCD_NRecord.PCDN_TBNumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TBNum”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TBNumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_TBBak {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_TBBakColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_TBBak”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_TBBakColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_Stat {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_StatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_Stat”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_StatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_iType {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_iTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_iType”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_iTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Stat {
                get {
                    try {
                        return ((int)(this[this.tablePCD_NRecord.StatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“Stat”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.StatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime CreateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.CreateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“CreateDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.CreateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UpdateDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.UpdateDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“UpdateDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.UpdateDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DeleteDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePCD_NRecord.DeleteDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“DeleteDate”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.DeleteDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PCDN_SourceCode {
                get {
                    try {
                        return ((string)(this[this.tablePCD_NRecord.PCDN_SourceCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("表“PCD_NRecord”中列“PCDN_SourceCode”的值为 DBNull。", e);
                    }
                }
                set {
                    this[this.tablePCD_NRecord.PCDN_SourceCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_CodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_CodeNull() {
                this[this.tablePCD_NRecord.PCDN_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_CCodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_CCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_CCodeNull() {
                this[this.tablePCD_NRecord.PCDN_CCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PRCodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PRCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PRCodeNull() {
                this[this.tablePCD_NRecord.PCDN_PRCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PCodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PCodeNull() {
                this[this.tablePCD_NRecord.PCDN_PCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PDCodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PDCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PDCodeNull() {
                this[this.tablePCD_NRecord.PCDN_PDCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PSCodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PSCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PSCodeNull() {
                this[this.tablePCD_NRecord.PCDN_PSCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PartNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PartNull() {
                this[this.tablePCD_NRecord.PCDN_PartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_SlumpNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_SlumpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_SlumpNull() {
                this[this.tablePCD_NRecord.PCDN_SlumpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_Spec1Null() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_Spec1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_Spec1Null() {
                this[this.tablePCD_NRecord.PCDN_Spec1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_Spec2Null() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_Spec2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_Spec2Null() {
                this[this.tablePCD_NRecord.PCDN_Spec2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TTypeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TTypeNull() {
                this[this.tablePCD_NRecord.PCDN_TTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TEquNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TEquColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TEquNull() {
                this[this.tablePCD_NRecord.PCDN_TEquColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_SOwnerNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_SOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_SOwnerNull() {
                this[this.tablePCD_NRecord.PCDN_SOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_SDateNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_SDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_SDateNull() {
                this[this.tablePCD_NRecord.PCDN_SDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TBStaNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TBStaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TBStaNull() {
                this[this.tablePCD_NRecord.PCDN_TBStaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TBLineNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TBLineColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TBLineNull() {
                this[this.tablePCD_NRecord.PCDN_TBLineColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_OOwnerNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_OOwnerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_OOwnerNull() {
                this[this.tablePCD_NRecord.PCDN_OOwnerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_ODateNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_ODateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_ODateNull() {
                this[this.tablePCD_NRecord.PCDN_ODateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PPLimitNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PPLimitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PPLimitNull() {
                this[this.tablePCD_NRecord.PCDN_PPLimitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_DITypeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_DITypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_DITypeNull() {
                this[this.tablePCD_NRecord.PCDN_DITypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_DINumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_DINumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_DINumNull() {
                this[this.tablePCD_NRecord.PCDN_DINumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PNumNull() {
                this[this.tablePCD_NRecord.PCDN_PNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PCNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PCNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PCNumNull() {
                this[this.tablePCD_NRecord.PCDN_PCNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PTOrdNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PTOrdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PTOrdNull() {
                this[this.tablePCD_NRecord.PCDN_PTOrdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PCDrvNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PCDrvColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PCDrvNull() {
                this[this.tablePCD_NRecord.PCDN_PCDrvColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_CompNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_CompColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_CompNull() {
                this[this.tablePCD_NRecord.PCDN_CompColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PCCodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PCCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PCCodeNull() {
                this[this.tablePCD_NRecord.PCDN_PCCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PCNoNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PCNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PCNoNull() {
                this[this.tablePCD_NRecord.PCDN_PCNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_DDateNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_DDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_DDateNull() {
                this[this.tablePCD_NRecord.PCDN_DDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_RDateNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_RDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_RDateNull() {
                this[this.tablePCD_NRecord.PCDN_RDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_JBeginNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_JBeginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_JBeginNull() {
                this[this.tablePCD_NRecord.PCDN_JBeginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_JEndNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_JEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_JEndNull() {
                this[this.tablePCD_NRecord.PCDN_JEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_LDateNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_LDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_LDateNull() {
                this[this.tablePCD_NRecord.PCDN_LDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_BDateNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_BDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_BDateNull() {
                this[this.tablePCD_NRecord.PCDN_BDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PPNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PPNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PPNumNull() {
                this[this.tablePCD_NRecord.PCDN_PPNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TDNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TDNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TDNumNull() {
                this[this.tablePCD_NRecord.PCDN_TDNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TTNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TTNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TTNumNull() {
                this[this.tablePCD_NRecord.PCDN_TTNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_RTNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_RTNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_RTNumNull() {
                this[this.tablePCD_NRecord.PCDN_RTNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_CTNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_CTNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_CTNumNull() {
                this[this.tablePCD_NRecord.PCDN_CTNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_RRNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_RRNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_RRNumNull() {
                this[this.tablePCD_NRecord.PCDN_RRNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_MoreNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_MoreNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_MoreNumNull() {
                this[this.tablePCD_NRecord.PCDN_MoreNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_PRNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_PRNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_PRNumNull() {
                this[this.tablePCD_NRecord.PCDN_PRNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_BStatusNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_BStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_BStatusNull() {
                this[this.tablePCD_NRecord.PCDN_BStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TRNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TRNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TRNumNull() {
                this[this.tablePCD_NRecord.PCDN_TRNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TBNumNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TBNumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TBNumNull() {
                this[this.tablePCD_NRecord.PCDN_TBNumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_TBBakNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_TBBakColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_TBBakNull() {
                this[this.tablePCD_NRecord.PCDN_TBBakColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_StatNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_StatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_StatNull() {
                this[this.tablePCD_NRecord.PCDN_StatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_iTypeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_iTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_iTypeNull() {
                this[this.tablePCD_NRecord.PCDN_iTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatNull() {
                return this.IsNull(this.tablePCD_NRecord.StatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatNull() {
                this[this.tablePCD_NRecord.StatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreateDateNull() {
                return this.IsNull(this.tablePCD_NRecord.CreateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreateDateNull() {
                this[this.tablePCD_NRecord.CreateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUpdateDateNull() {
                return this.IsNull(this.tablePCD_NRecord.UpdateDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUpdateDateNull() {
                this[this.tablePCD_NRecord.UpdateDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDeleteDateNull() {
                return this.IsNull(this.tablePCD_NRecord.DeleteDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDeleteDateNull() {
                this[this.tablePCD_NRecord.DeleteDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPCDN_SourceCodeNull() {
                return this.IsNull(this.tablePCD_NRecord.PCDN_SourceCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPCDN_SourceCodeNull() {
                this[this.tablePCD_NRecord.PCDN_SourceCodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PCD_NRecordRowChangeEvent : global::System.EventArgs {
            
            private PCD_NRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PCD_NRecordRowChangeEvent(PCD_NRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PCD_NRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace QX.UI.Data.TicketDeliveryDBTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PCD_NRecordTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PCD_NRecordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "PCD_NRecord";
            tableMapping.ColumnMappings.Add("PCDN_ID", "PCDN_ID");
            tableMapping.ColumnMappings.Add("PCDN_Code", "PCDN_Code");
            tableMapping.ColumnMappings.Add("PCDN_CCode", "PCDN_CCode");
            tableMapping.ColumnMappings.Add("PCDN_PRCode", "PCDN_PRCode");
            tableMapping.ColumnMappings.Add("PCDN_PCode", "PCDN_PCode");
            tableMapping.ColumnMappings.Add("PCDN_PDCode", "PCDN_PDCode");
            tableMapping.ColumnMappings.Add("PCDN_PSCode", "PCDN_PSCode");
            tableMapping.ColumnMappings.Add("PCDN_Part", "PCDN_Part");
            tableMapping.ColumnMappings.Add("PCDN_Slump", "PCDN_Slump");
            tableMapping.ColumnMappings.Add("PCDN_Spec1", "PCDN_Spec1");
            tableMapping.ColumnMappings.Add("PCDN_Spec2", "PCDN_Spec2");
            tableMapping.ColumnMappings.Add("PCDN_TType", "PCDN_TType");
            tableMapping.ColumnMappings.Add("PCDN_TEqu", "PCDN_TEqu");
            tableMapping.ColumnMappings.Add("PCDN_SOwner", "PCDN_SOwner");
            tableMapping.ColumnMappings.Add("PCDN_SDate", "PCDN_SDate");
            tableMapping.ColumnMappings.Add("PCDN_TBSta", "PCDN_TBSta");
            tableMapping.ColumnMappings.Add("PCDN_TBLine", "PCDN_TBLine");
            tableMapping.ColumnMappings.Add("PCDN_OOwner", "PCDN_OOwner");
            tableMapping.ColumnMappings.Add("PCDN_ODate", "PCDN_ODate");
            tableMapping.ColumnMappings.Add("PCDN_PPLimit", "PCDN_PPLimit");
            tableMapping.ColumnMappings.Add("PCDN_DIType", "PCDN_DIType");
            tableMapping.ColumnMappings.Add("PCDN_DINum", "PCDN_DINum");
            tableMapping.ColumnMappings.Add("PCDN_PNum", "PCDN_PNum");
            tableMapping.ColumnMappings.Add("PCDN_PCNum", "PCDN_PCNum");
            tableMapping.ColumnMappings.Add("PCDN_PTOrd", "PCDN_PTOrd");
            tableMapping.ColumnMappings.Add("PCDN_PCDrv", "PCDN_PCDrv");
            tableMapping.ColumnMappings.Add("PCDN_Comp", "PCDN_Comp");
            tableMapping.ColumnMappings.Add("PCDN_PCCode", "PCDN_PCCode");
            tableMapping.ColumnMappings.Add("PCDN_PCNo", "PCDN_PCNo");
            tableMapping.ColumnMappings.Add("PCDN_DDate", "PCDN_DDate");
            tableMapping.ColumnMappings.Add("PCDN_RDate", "PCDN_RDate");
            tableMapping.ColumnMappings.Add("PCDN_JBegin", "PCDN_JBegin");
            tableMapping.ColumnMappings.Add("PCDN_JEnd", "PCDN_JEnd");
            tableMapping.ColumnMappings.Add("PCDN_LDate", "PCDN_LDate");
            tableMapping.ColumnMappings.Add("PCDN_BDate", "PCDN_BDate");
            tableMapping.ColumnMappings.Add("PCDN_PPNum", "PCDN_PPNum");
            tableMapping.ColumnMappings.Add("PCDN_TDNum", "PCDN_TDNum");
            tableMapping.ColumnMappings.Add("PCDN_TTNum", "PCDN_TTNum");
            tableMapping.ColumnMappings.Add("PCDN_RTNum", "PCDN_RTNum");
            tableMapping.ColumnMappings.Add("PCDN_CTNum", "PCDN_CTNum");
            tableMapping.ColumnMappings.Add("PCDN_RRNum", "PCDN_RRNum");
            tableMapping.ColumnMappings.Add("PCDN_MoreNum", "PCDN_MoreNum");
            tableMapping.ColumnMappings.Add("PCDN_PRNum", "PCDN_PRNum");
            tableMapping.ColumnMappings.Add("PCDN_BStatus", "PCDN_BStatus");
            tableMapping.ColumnMappings.Add("PCDN_TRNum", "PCDN_TRNum");
            tableMapping.ColumnMappings.Add("PCDN_TBNum", "PCDN_TBNum");
            tableMapping.ColumnMappings.Add("PCDN_TBBak", "PCDN_TBBak");
            tableMapping.ColumnMappings.Add("PCDN_Stat", "PCDN_Stat");
            tableMapping.ColumnMappings.Add("PCDN_iType", "PCDN_iType");
            tableMapping.ColumnMappings.Add("Stat", "Stat");
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate");
            tableMapping.ColumnMappings.Add("UpdateDate", "UpdateDate");
            tableMapping.ColumnMappings.Add("DeleteDate", "DeleteDate");
            tableMapping.ColumnMappings.Add("PCDN_SourceCode", "PCDN_SourceCode");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[PCD_NRecord] WHERE (([PCDN_ID] = @Original_PCDN_ID))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCDN_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PCDN_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[PCD_NRecord] ([PCDN_Code], [PCDN_CCode], [PCDN_PRCode], [PCDN_PCode], [PCDN_PDCode], [PCDN_PSCode], [PCDN_Part], [PCDN_Slump], [PCDN_Spec1], [PCDN_Spec2], [PCDN_TType], [PCDN_TEqu], [PCDN_SOwner], [PCDN_SDate], [PCDN_TBSta], [PCDN_TBLine], [PCDN_OOwner], [PCDN_ODate], [PCDN_PPLimit], [PCDN_DIType], [PCDN_DINum], [PCDN_PNum], [PCDN_PCNum], [PCDN_PTOrd], [PCDN_PCDrv], [PCDN_Comp], [PCDN_PCCode], [PCDN_PCNo], [PCDN_DDate], [PCDN_RDate], [PCDN_JBegin], [PCDN_JEnd], [PCDN_LDate], [PCDN_BDate], [PCDN_PPNum], [PCDN_TDNum], [PCDN_TTNum], [PCDN_RTNum], [PCDN_CTNum], [PCDN_RRNum], [PCDN_MoreNum], [PCDN_PRNum], [PCDN_BStatus], [PCDN_TRNum], [PCDN_TBNum], [PCDN_TBBak], [PCDN_Stat], [PCDN_iType], [Stat], [CreateDate], [UpdateDate], [DeleteDate], [PCDN_SourceCode]) VALUES (@PCDN_Code, @PCDN_CCode, @PCDN_PRCode, @PCDN_PCode, @PCDN_PDCode, @PCDN_PSCode, @PCDN_Part, @PCDN_Slump, @PCDN_Spec1, @PCDN_Spec2, @PCDN_TType, @PCDN_TEqu, @PCDN_SOwner, @PCDN_SDate, @PCDN_TBSta, @PCDN_TBLine, @PCDN_OOwner, @PCDN_ODate, @PCDN_PPLimit, @PCDN_DIType, @PCDN_DINum, @PCDN_PNum, @PCDN_PCNum, @PCDN_PTOrd, @PCDN_PCDrv, @PCDN_Comp, @PCDN_PCCode, @PCDN_PCNo, @PCDN_DDate, @PCDN_RDate, @PCDN_JBegin, @PCDN_JEnd, @PCDN_LDate, @PCDN_BDate, @PCDN_PPNum, @PCDN_TDNum, @PCDN_TTNum, @PCDN_RTNum, @PCDN_CTNum, @PCDN_RRNum, @PCDN_MoreNum, @PCDN_PRNum, @PCDN_BStatus, @PCDN_TRNum, @PCDN_TBNum, @PCDN_TBBak, @PCDN_Stat, @PCDN_iType, @Stat, @CreateDate, @UpdateDate, @DeleteDate, @PCDN_SourceCode)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_CCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_CCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PRCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PRCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PDCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PDCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PSCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PSCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Part", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Part", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Slump", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Slump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Spec1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Spec1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Spec2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Spec2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TEqu", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TEqu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_SOwner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_SOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_SDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_SDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBSta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TBSta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBLine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TBLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_OOwner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_OOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_ODate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_ODate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PPLimit", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PPLimit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_DIType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_DIType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_DINum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_DINum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PCNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PTOrd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PTOrd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCDrv", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCDrv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Comp", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Comp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_DDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_DDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_RDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_RDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_JBegin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_JBegin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_JEnd", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_JEnd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_LDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_LDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_BDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_BDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PPNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PPNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TDNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_TDNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TTNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TTNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_RTNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_RTNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_CTNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_CTNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_RRNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_RRNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_MoreNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_MoreNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PRNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PRNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_BStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_BStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TRNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_TRNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_TBNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBBak", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TBBak", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Stat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Stat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_iType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_iType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeleteDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeleteDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_SourceCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_SourceCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[PCD_NRecord] SET [PCDN_Code] = @PCDN_Code, [PCDN_CCode] = @PCDN_CCo" +
                "de, [PCDN_PRCode] = @PCDN_PRCode, [PCDN_PCode] = @PCDN_PCode, [PCDN_PDCode] = @P" +
                "CDN_PDCode, [PCDN_PSCode] = @PCDN_PSCode, [PCDN_Part] = @PCDN_Part, [PCDN_Slump]" +
                " = @PCDN_Slump, [PCDN_Spec1] = @PCDN_Spec1, [PCDN_Spec2] = @PCDN_Spec2, [PCDN_TT" +
                "ype] = @PCDN_TType, [PCDN_TEqu] = @PCDN_TEqu, [PCDN_SOwner] = @PCDN_SOwner, [PCD" +
                "N_SDate] = @PCDN_SDate, [PCDN_TBSta] = @PCDN_TBSta, [PCDN_TBLine] = @PCDN_TBLine" +
                ", [PCDN_OOwner] = @PCDN_OOwner, [PCDN_ODate] = @PCDN_ODate, [PCDN_PPLimit] = @PC" +
                "DN_PPLimit, [PCDN_DIType] = @PCDN_DIType, [PCDN_DINum] = @PCDN_DINum, [PCDN_PNum" +
                "] = @PCDN_PNum, [PCDN_PCNum] = @PCDN_PCNum, [PCDN_PTOrd] = @PCDN_PTOrd, [PCDN_PC" +
                "Drv] = @PCDN_PCDrv, [PCDN_Comp] = @PCDN_Comp, [PCDN_PCCode] = @PCDN_PCCode, [PCD" +
                "N_PCNo] = @PCDN_PCNo, [PCDN_DDate] = @PCDN_DDate, [PCDN_RDate] = @PCDN_RDate, [P" +
                "CDN_JBegin] = @PCDN_JBegin, [PCDN_JEnd] = @PCDN_JEnd, [PCDN_LDate] = @PCDN_LDate" +
                ", [PCDN_BDate] = @PCDN_BDate, [PCDN_PPNum] = @PCDN_PPNum, [PCDN_TDNum] = @PCDN_T" +
                "DNum, [PCDN_TTNum] = @PCDN_TTNum, [PCDN_RTNum] = @PCDN_RTNum, [PCDN_CTNum] = @PC" +
                "DN_CTNum, [PCDN_RRNum] = @PCDN_RRNum, [PCDN_MoreNum] = @PCDN_MoreNum, [PCDN_PRNu" +
                "m] = @PCDN_PRNum, [PCDN_BStatus] = @PCDN_BStatus, [PCDN_TRNum] = @PCDN_TRNum, [P" +
                "CDN_TBNum] = @PCDN_TBNum, [PCDN_TBBak] = @PCDN_TBBak, [PCDN_Stat] = @PCDN_Stat, " +
                "[PCDN_iType] = @PCDN_iType, [Stat] = @Stat, [CreateDate] = @CreateDate, [UpdateD" +
                "ate] = @UpdateDate, [DeleteDate] = @DeleteDate, [PCDN_SourceCode] = @PCDN_Source" +
                "Code WHERE (([PCDN_ID] = @Original_PCDN_ID))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Code", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Code", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_CCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_CCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PRCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PRCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PDCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PDCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PSCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PSCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Part", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Part", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Slump", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Slump", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Spec1", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Spec1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Spec2", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Spec2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TEqu", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TEqu", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_SOwner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_SOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_SDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_SDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBSta", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TBSta", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBLine", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TBLine", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_OOwner", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_OOwner", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_ODate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_ODate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PPLimit", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PPLimit", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_DIType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_DIType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_DINum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_DINum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PCNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PTOrd", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PTOrd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCDrv", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCDrv", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Comp", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Comp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PCNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_PCNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_DDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_DDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_RDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_RDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_JBegin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_JBegin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_JEnd", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_JEnd", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_LDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_LDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_BDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_BDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PPNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PPNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TDNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_TDNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TTNum", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TTNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_RTNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_RTNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_CTNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_CTNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_RRNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_RRNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_MoreNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_MoreNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_PRNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_PRNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_BStatus", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_BStatus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TRNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_TRNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBNum", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "PCDN_TBNum", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_TBBak", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_TBBak", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_Stat", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_Stat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_iType", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_iType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Stat", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Stat", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CreateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CreateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UpdateDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UpdateDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DeleteDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DeleteDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PCDN_SourceCode", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PCDN_SourceCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PCDN_ID", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 18, 0, "PCDN_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["LAFA20101112ConnectionString"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT PCDN_ID, PCDN_Code, PCDN_CCode, PCDN_PRCode, PCDN_PCode, PCDN_PDCode, PCDN_PSCode, PCDN_Part, PCDN_Slump, PCDN_Spec1, PCDN_Spec2, PCDN_TType, PCDN_TEqu, PCDN_SOwner, PCDN_SDate, PCDN_TBSta, PCDN_TBLine, PCDN_OOwner, PCDN_ODate, PCDN_PPLimit, PCDN_DIType, PCDN_DINum, PCDN_PNum, PCDN_PCNum, PCDN_PTOrd, PCDN_PCDrv, PCDN_Comp, PCDN_PCCode, PCDN_PCNo, PCDN_DDate, PCDN_RDate, PCDN_JBegin, PCDN_JEnd, PCDN_LDate, PCDN_BDate, PCDN_PPNum, PCDN_TDNum, PCDN_TTNum, PCDN_RTNum, PCDN_CTNum, PCDN_RRNum, PCDN_MoreNum, PCDN_PRNum, PCDN_BStatus, PCDN_TRNum, PCDN_TBNum, PCDN_TBBak, PCDN_Stat, PCDN_iType, Stat, CreateDate, UpdateDate, DeleteDate, PCDN_SourceCode FROM dbo.PCD_NRecord";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(TicketDeliveryDB.PCD_NRecordDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual TicketDeliveryDB.PCD_NRecordDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            TicketDeliveryDB.PCD_NRecordDataTable dataTable = new TicketDeliveryDB.PCD_NRecordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TicketDeliveryDB.PCD_NRecordDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(TicketDeliveryDB dataSet) {
            return this.Adapter.Update(dataSet, "PCD_NRecord");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_PCDN_ID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_PCDN_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string PCDN_Code, 
                    string PCDN_CCode, 
                    string PCDN_PRCode, 
                    string PCDN_PCode, 
                    string PCDN_PDCode, 
                    string PCDN_PSCode, 
                    string PCDN_Part, 
                    string PCDN_Slump, 
                    string PCDN_Spec1, 
                    string PCDN_Spec2, 
                    string PCDN_TType, 
                    string PCDN_TEqu, 
                    string PCDN_SOwner, 
                    global::System.Nullable<global::System.DateTime> PCDN_SDate, 
                    string PCDN_TBSta, 
                    string PCDN_TBLine, 
                    string PCDN_OOwner, 
                    global::System.Nullable<global::System.DateTime> PCDN_ODate, 
                    global::System.Nullable<decimal> PCDN_PPLimit, 
                    string PCDN_DIType, 
                    global::System.Nullable<decimal> PCDN_DINum, 
                    global::System.Nullable<decimal> PCDN_PNum, 
                    global::System.Nullable<decimal> PCDN_PCNum, 
                    global::System.Nullable<int> PCDN_PTOrd, 
                    string PCDN_PCDrv, 
                    string PCDN_Comp, 
                    string PCDN_PCCode, 
                    string PCDN_PCNo, 
                    global::System.Nullable<global::System.DateTime> PCDN_DDate, 
                    global::System.Nullable<global::System.DateTime> PCDN_RDate, 
                    global::System.Nullable<global::System.DateTime> PCDN_JBegin, 
                    global::System.Nullable<global::System.DateTime> PCDN_JEnd, 
                    global::System.Nullable<global::System.DateTime> PCDN_LDate, 
                    global::System.Nullable<global::System.DateTime> PCDN_BDate, 
                    global::System.Nullable<decimal> PCDN_PPNum, 
                    global::System.Nullable<decimal> PCDN_TDNum, 
                    global::System.Nullable<int> PCDN_TTNum, 
                    global::System.Nullable<decimal> PCDN_RTNum, 
                    global::System.Nullable<decimal> PCDN_CTNum, 
                    global::System.Nullable<decimal> PCDN_RRNum, 
                    global::System.Nullable<decimal> PCDN_MoreNum, 
                    global::System.Nullable<decimal> PCDN_PRNum, 
                    string PCDN_BStatus, 
                    global::System.Nullable<decimal> PCDN_TRNum, 
                    global::System.Nullable<decimal> PCDN_TBNum, 
                    string PCDN_TBBak, 
                    string PCDN_Stat, 
                    string PCDN_iType, 
                    global::System.Nullable<int> Stat, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    global::System.Nullable<global::System.DateTime> UpdateDate, 
                    global::System.Nullable<global::System.DateTime> DeleteDate, 
                    string PCDN_SourceCode) {
            if ((PCDN_Code == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PCDN_Code));
            }
            if ((PCDN_CCode == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(PCDN_CCode));
            }
            if ((PCDN_PRCode == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PCDN_PRCode));
            }
            if ((PCDN_PCode == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PCDN_PCode));
            }
            if ((PCDN_PDCode == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(PCDN_PDCode));
            }
            if ((PCDN_PSCode == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(PCDN_PSCode));
            }
            if ((PCDN_Part == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(PCDN_Part));
            }
            if ((PCDN_Slump == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(PCDN_Slump));
            }
            if ((PCDN_Spec1 == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(PCDN_Spec1));
            }
            if ((PCDN_Spec2 == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(PCDN_Spec2));
            }
            if ((PCDN_TType == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(PCDN_TType));
            }
            if ((PCDN_TEqu == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(PCDN_TEqu));
            }
            if ((PCDN_SOwner == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(PCDN_SOwner));
            }
            if ((PCDN_SDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((System.DateTime)(PCDN_SDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TBSta == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(PCDN_TBSta));
            }
            if ((PCDN_TBLine == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(PCDN_TBLine));
            }
            if ((PCDN_OOwner == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(PCDN_OOwner));
            }
            if ((PCDN_ODate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(PCDN_ODate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PPLimit.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((decimal)(PCDN_PPLimit.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((PCDN_DIType == null)) {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = ((string)(PCDN_DIType));
            }
            if ((PCDN_DINum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((decimal)(PCDN_DINum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(PCDN_PNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PCNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(PCDN_PCNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PTOrd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((int)(PCDN_PTOrd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PCDrv == null)) {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = ((string)(PCDN_PCDrv));
            }
            if ((PCDN_Comp == null)) {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = ((string)(PCDN_Comp));
            }
            if ((PCDN_PCCode == null)) {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = ((string)(PCDN_PCCode));
            }
            if ((PCDN_PCNo == null)) {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = ((string)(PCDN_PCNo));
            }
            if ((PCDN_DDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((System.DateTime)(PCDN_DDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((PCDN_RDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((System.DateTime)(PCDN_RDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((PCDN_JBegin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[30].Value = ((System.DateTime)(PCDN_JBegin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PCDN_JEnd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[31].Value = ((System.DateTime)(PCDN_JEnd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((PCDN_LDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[32].Value = ((System.DateTime)(PCDN_LDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PCDN_BDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[33].Value = ((System.DateTime)(PCDN_BDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PPNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[34].Value = ((decimal)(PCDN_PPNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TDNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[35].Value = ((decimal)(PCDN_TDNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TTNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[36].Value = ((int)(PCDN_TTNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((PCDN_RTNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(PCDN_RTNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((PCDN_CTNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(PCDN_CTNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((PCDN_RRNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(PCDN_RRNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((PCDN_MoreNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(PCDN_MoreNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PRNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(PCDN_PRNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((PCDN_BStatus == null)) {
                this.Adapter.InsertCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[42].Value = ((string)(PCDN_BStatus));
            }
            if ((PCDN_TRNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(PCDN_TRNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TBNum.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(PCDN_TBNum.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TBBak == null)) {
                this.Adapter.InsertCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[45].Value = ((string)(PCDN_TBBak));
            }
            if ((PCDN_Stat == null)) {
                this.Adapter.InsertCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[46].Value = ((string)(PCDN_Stat));
            }
            if ((PCDN_iType == null)) {
                this.Adapter.InsertCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[47].Value = ((string)(PCDN_iType));
            }
            if ((Stat.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[48].Value = ((int)(Stat.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[49].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((UpdateDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[50].Value = ((System.DateTime)(UpdateDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DeleteDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[51].Value = ((System.DateTime)(DeleteDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((PCDN_SourceCode == null)) {
                this.Adapter.InsertCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[52].Value = ((string)(PCDN_SourceCode));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PCDN_Code, 
                    string PCDN_CCode, 
                    string PCDN_PRCode, 
                    string PCDN_PCode, 
                    string PCDN_PDCode, 
                    string PCDN_PSCode, 
                    string PCDN_Part, 
                    string PCDN_Slump, 
                    string PCDN_Spec1, 
                    string PCDN_Spec2, 
                    string PCDN_TType, 
                    string PCDN_TEqu, 
                    string PCDN_SOwner, 
                    global::System.Nullable<global::System.DateTime> PCDN_SDate, 
                    string PCDN_TBSta, 
                    string PCDN_TBLine, 
                    string PCDN_OOwner, 
                    global::System.Nullable<global::System.DateTime> PCDN_ODate, 
                    global::System.Nullable<decimal> PCDN_PPLimit, 
                    string PCDN_DIType, 
                    global::System.Nullable<decimal> PCDN_DINum, 
                    global::System.Nullable<decimal> PCDN_PNum, 
                    global::System.Nullable<decimal> PCDN_PCNum, 
                    global::System.Nullable<int> PCDN_PTOrd, 
                    string PCDN_PCDrv, 
                    string PCDN_Comp, 
                    string PCDN_PCCode, 
                    string PCDN_PCNo, 
                    global::System.Nullable<global::System.DateTime> PCDN_DDate, 
                    global::System.Nullable<global::System.DateTime> PCDN_RDate, 
                    global::System.Nullable<global::System.DateTime> PCDN_JBegin, 
                    global::System.Nullable<global::System.DateTime> PCDN_JEnd, 
                    global::System.Nullable<global::System.DateTime> PCDN_LDate, 
                    global::System.Nullable<global::System.DateTime> PCDN_BDate, 
                    global::System.Nullable<decimal> PCDN_PPNum, 
                    global::System.Nullable<decimal> PCDN_TDNum, 
                    global::System.Nullable<int> PCDN_TTNum, 
                    global::System.Nullable<decimal> PCDN_RTNum, 
                    global::System.Nullable<decimal> PCDN_CTNum, 
                    global::System.Nullable<decimal> PCDN_RRNum, 
                    global::System.Nullable<decimal> PCDN_MoreNum, 
                    global::System.Nullable<decimal> PCDN_PRNum, 
                    string PCDN_BStatus, 
                    global::System.Nullable<decimal> PCDN_TRNum, 
                    global::System.Nullable<decimal> PCDN_TBNum, 
                    string PCDN_TBBak, 
                    string PCDN_Stat, 
                    string PCDN_iType, 
                    global::System.Nullable<int> Stat, 
                    global::System.Nullable<global::System.DateTime> CreateDate, 
                    global::System.Nullable<global::System.DateTime> UpdateDate, 
                    global::System.Nullable<global::System.DateTime> DeleteDate, 
                    string PCDN_SourceCode, 
                    decimal Original_PCDN_ID) {
            if ((PCDN_Code == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PCDN_Code));
            }
            if ((PCDN_CCode == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(PCDN_CCode));
            }
            if ((PCDN_PRCode == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PCDN_PRCode));
            }
            if ((PCDN_PCode == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PCDN_PCode));
            }
            if ((PCDN_PDCode == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(PCDN_PDCode));
            }
            if ((PCDN_PSCode == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(PCDN_PSCode));
            }
            if ((PCDN_Part == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(PCDN_Part));
            }
            if ((PCDN_Slump == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(PCDN_Slump));
            }
            if ((PCDN_Spec1 == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(PCDN_Spec1));
            }
            if ((PCDN_Spec2 == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(PCDN_Spec2));
            }
            if ((PCDN_TType == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(PCDN_TType));
            }
            if ((PCDN_TEqu == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(PCDN_TEqu));
            }
            if ((PCDN_SOwner == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(PCDN_SOwner));
            }
            if ((PCDN_SDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(PCDN_SDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TBSta == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(PCDN_TBSta));
            }
            if ((PCDN_TBLine == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(PCDN_TBLine));
            }
            if ((PCDN_OOwner == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(PCDN_OOwner));
            }
            if ((PCDN_ODate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(PCDN_ODate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PPLimit.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(PCDN_PPLimit.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((PCDN_DIType == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(PCDN_DIType));
            }
            if ((PCDN_DINum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(PCDN_DINum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(PCDN_PNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PCNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(PCDN_PCNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PTOrd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((int)(PCDN_PTOrd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PCDrv == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(PCDN_PCDrv));
            }
            if ((PCDN_Comp == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(PCDN_Comp));
            }
            if ((PCDN_PCCode == null)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(PCDN_PCCode));
            }
            if ((PCDN_PCNo == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((string)(PCDN_PCNo));
            }
            if ((PCDN_DDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(PCDN_DDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((PCDN_RDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(PCDN_RDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((PCDN_JBegin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(PCDN_JBegin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((PCDN_JEnd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((System.DateTime)(PCDN_JEnd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((PCDN_LDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((System.DateTime)(PCDN_LDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((PCDN_BDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((System.DateTime)(PCDN_BDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PPNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((decimal)(PCDN_PPNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TDNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(PCDN_TDNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TTNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((int)(PCDN_TTNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((PCDN_RTNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(PCDN_RTNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((PCDN_CTNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(PCDN_CTNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((PCDN_RRNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(PCDN_RRNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((PCDN_MoreNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(PCDN_MoreNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((PCDN_PRNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(PCDN_PRNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((PCDN_BStatus == null)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(PCDN_BStatus));
            }
            if ((PCDN_TRNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(PCDN_TRNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TBNum.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(PCDN_TBNum.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((PCDN_TBBak == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((string)(PCDN_TBBak));
            }
            if ((PCDN_Stat == null)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(PCDN_Stat));
            }
            if ((PCDN_iType == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((string)(PCDN_iType));
            }
            if ((Stat.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(Stat.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((CreateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((System.DateTime)(CreateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((UpdateDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((System.DateTime)(UpdateDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((DeleteDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((System.DateTime)(DeleteDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((PCDN_SourceCode == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((string)(PCDN_SourceCode));
            }
            this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(Original_PCDN_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private PCD_NRecordTableAdapter _pCD_NRecordTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PCD_NRecordTableAdapter PCD_NRecordTableAdapter {
            get {
                return this._pCD_NRecordTableAdapter;
            }
            set {
                this._pCD_NRecordTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._pCD_NRecordTableAdapter != null) 
                            && (this._pCD_NRecordTableAdapter.Connection != null))) {
                    return this._pCD_NRecordTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._pCD_NRecordTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(TicketDeliveryDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pCD_NRecordTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.PCD_NRecord.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pCD_NRecordTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(TicketDeliveryDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._pCD_NRecordTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.PCD_NRecord.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pCD_NRecordTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(TicketDeliveryDB dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._pCD_NRecordTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.PCD_NRecord.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pCD_NRecordTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(TicketDeliveryDB dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._pCD_NRecordTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pCD_NRecordTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("由 TableAdapterManager 管理的所有 TableAdapter 必须使用相同的连接字符串。");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager 不包含任何连接信息。请将每个 TableAdapterManager TableAdapter 属性设置为有效的 Tabl" +
                        "eAdapter 实例。");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("事务无法开始。当前的数据连接不支持事务或当前状态不允许事务开始。");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._pCD_NRecordTableAdapter != null)) {
                    revertConnections.Add(this._pCD_NRecordTableAdapter, this._pCD_NRecordTableAdapter.Connection);
                    this._pCD_NRecordTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._pCD_NRecordTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._pCD_NRecordTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pCD_NRecordTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pCD_NRecordTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._pCD_NRecordTableAdapter != null)) {
                    this._pCD_NRecordTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._pCD_NRecordTableAdapter]));
                    this._pCD_NRecordTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591